version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_container
    environment:
      MYSQL_ROOT_PASSWORD: 1234  # 루트 비밀번호
      MYSQL_DATABASE: fixer       # 생성할 데이터베이스 이름
      MYSQL_USER: qwer1234        # 일반 사용자 이름
      MYSQL_PASSWORD: 1234        # 사용자 비밀번호
    volumes:
      - mysql_data:/var/lib/mysql  # MySQL 데이터 저장
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql  # 초기 SQL 파일 실행
    networks:
      - app-network
    healthcheck:  # MySQL 상태 확인 설정 추가
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: spring_backend
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/fixer
      - SPRING_DATASOURCE_USERNAME=qwer1234
      - SPRING_DATASOURCE_PASSWORD=1234
    depends_on:
      mysql:
        condition: service_healthy  # MySQL 서비스가 health check를 통과할 때까지 대기
    networks:
      - app-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: react_frontend
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx_container
    ports:
      - "0.0.0.0:15018:80"  # 외부 포트 30030에 노출
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./src/frontend/dist:/usr/share/nginx/html
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
